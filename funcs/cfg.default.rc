# -*- coding: utf-8, tab-width: 2 -*-

CFG[doibot_log_dest_dir]="logs.@$HOSTNAME/$(date +%y%m)"
CFG[doibot_rerun_state_dir]="logs.@$HOSTNAME/rerun_state"

CFG[doibot_rerun_min_delay]='0 days 0 hours 10 minutes 0 seconds'
# If for some reason your scheduling mechanism¹ fires the cron task
# too early, you can use this minimum delay to have the bot sleep
# before doing its actual work.
#
# (¹ In `docker-compose` without a docker swarm your scheduling options
# may be limited to immediate restart. You may be able to abuse delayed
# restart on failure by always failing, but that way your docker
# monitoring software will always have the failed container.)


CFG[anno_url_versep]='~'

CFG[anno_baseurl]='http://localhost:33321/anno/'
CFG[anno_doi_prefix]='0.0/no-doi-prefix.'
CFG[anno_doi_versep]='_'
CFG[anno_doi_suffix]=''



CFG[doibot_adapter_name]='dummy'
CFG[doibot_adapter_prog]='echo'
CFG[doibot_adapter_args]='"Error from dummy registry: Denied: Not authorized"'



# In an interactive desktop development environment, you may use the
# gxdebug adapter as a GUI for deciding DOI requests:
# CFG[doibot_adapter_name]='gxdebug'
# CFG[doibot_adapter_prog]="$BOT_PATH/util/adapter_gxdebug.sh"
# CFG[doibot_adapter_args]='update_doi_meta_for_one_anno_on_stdin'




















# If you want to run the DOI bot in docker, keep this line:
eval "$DOCKER_DOIBOT_CFG_OVERRIDES"
# If you use multiple config files, the docker eval line should run last.
